- DTD (DEFINIÇÃO DO TIPO DE DOCUMENTO)

	A primeira parte em um documento html é composta por DOCTYPE. Essa tag
informa sobre a versão do html

	A DOCTYPE é uma DTD, especifica as regras sintáticas da linguagem. Para
html 4.01 possui 3 DTDs:
	* Strict DTD --> inclui todos os elementos e atributos ainda em uso
	* Transitional DTD --> inclui todos da DTD e os deprecated
	* Frameset DTD --> inclui todos do transitional + o elemento frame

- declaração de uma strict DTD

	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" 
	"http://www.w3.org/TR/html4/strict.dtd">

- declaração de uma transitional DTD

	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">

- declaração de uma frameset DTD
	
	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" 
	"http://www.w3.org/TR/html4/frameset.dtd">

- CABEÇALHO HTML (TAG <HEAD>)

	contem informações sobre o documento

	possíveis tags contidas no head:
		* title --> título do documento
		* base --> endereço ou alvo para links do documento
		* link --> relação entre documento e arquivos externos
		* meta --> metadados
		* script --> scripts
		* style --> estilo dos elementos

	a tag head pode conter um atributo chamado profile, que especifica o
o local de um ou mais perfis de metadados. O valor é um URI

	
- a tag <meta>

	Motores de busca  encontram informações armazenadas em um sistema 
computacional a partir de palavras-chave, como as contidas como metadado na
tag <meta>.

	é possível indicar o auto de um documento assim:
		<meta name = "author" content="jorge amado"/>

	os metadados podem ser definidos de duas maneiras:
		* dentro do documento, por meio da tag <meta>
		* de fora do documento, ligando-o por meio da tag <link>

	Atributos da tag <meta>:
		* name
		* content
		* scheme
		* http-equiv

	O atributo scheme as vezes é essencial para impedir ambiguidade de
dados em diferentes formatos. Exemplo, data pode gerar ambiguidade, então com
o atributo scheme isso pode ser resolvido:
	
	<meta scheme="Month-Day-Year" name="publish_date" content="10-9-97"/>
	
	Dessa forma, o valor 10-9-97 já tem seu formato definido pelo atributo
scheme, que nesse caso foi mês - dia - ano

	o atributo "http-equiv" pode ser usado no lugar do atributo para gerar
interaçoes com o protocolo http. Exemplo:
	
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

	Nesse exemplo, ajuda a identificar a mídia do documento, para auxiliar 
o browser a exibir caracteres especiais

	outro exemplo de uso do atributo http-equiv:

	<meta http-equiv="Pragma" content="no-cache" />

	Nesse outro exemplo, a propriedade Pragma com valor no-cache indica
que o browser nao deve armazenar a pagina em cache


- tag <link>

	define relação entre documento e algum recurso externo. Comumente
utilizado para ligar um documento a um CSS. Exemplo:

    <link rel="stylesheet" type="text/css" media="screen" href="css/w3c.css"/>

- tag <base>

	Especifica um endereço ou um alvo padrão para todos os links na página.
Endereço é feito no atributo href e o alvo com o atributo target.

	o atributo href indica que todos os links devem direcionar para o
endereço informado. Já o atributo target indica como o endereço é aberto.

- tag <script>

	Usada para especificar scripts de javascript que atuam no documento. 
Pode conter o script diretamente ou através do atributo "src".,

	É possível usar uma tag <noscript> para o caso de browsers sem suporte
ao javascript, logo realizando alguma ação pré-determinada

- CORPO (TAG <BODY>)


- quebra de linhas

	para realizar quebra de linha, utiliza-se a tag <br/> ou <br></br>.
No segundo caso, o texto fica entre as tags.

- linha horizontal

	Separador especificado pela tag <hr/>. Esse elemento possui atributos:
		* size --> altura em pixels
		* width --> largura em percentual
		* align --> posição

	Os atributos foram removidos no html5

- tags de formatação

	Para criar um parágrafo, a tag <p> é utilizada

	Algumas outras tags de formatação de texto:
		* <b> --> negrito
		* <u> --> sublinhado
		* <s> --> riscado
		* <i> --> italico
		* <small> --> fonte menor
		* <sub> --> subescrito
		* <sup> --> superescrito

- caracteres especiais

	para escrever um caractere especial, deve usar sequencias de escape.
As sequencias são compostas por 3 partes:
	* inicio --> &
	* meio --> texto com caractere especial
	* fim --> ;

	Entidades e seus caracteres especiais:
		* &lt; --> "<"
		* &gt; --> ">"
		* &amp; --> "&"

- inserção de figuras

	Imagens são inseridas no corpo do html com as tags:
		* <img/>
		* <object>

	A tag <img/> pode possuir 5 atributos:
		* src --> indica caminho e formato da imagem
		* alt --> descrição da imagem ao passar curso acima
		* longdesc --> link para descrição completa da imagem
		* width --> largura da imagem
		* height --> altura da imagem

	A tag <object> pode inserir figuras, videos e applets. Para inserir
imagem basta usar os atributos:
		* data --> URI da localização da imagem
		* type --> formato da imagem

	Exemplos de tags equivalentes para img e object:

	<img src="URI" width="100" height="100" alt="descrição"/>
	
			ou

	<object data="URI" type="image/jpg" width="100" height="100"> 
		descrição 
	</object>


- construção de tabela

	Tabelas são definidas com a tag <table>...</table>. A divisória ocorre
em linhas por meio da tag <tr>...</tr> e colunas com a tag <td>...</td>

	A tag table possui alguns elementos que cairam em desuso no html5:
		* border --> borda da tabela 
		* width --> largura da tabela (em percentual)
		* summary --> descrição da tabela

	A tag <tr> pode conter a tag <th>, para indicar título da linha/coluna.
O titulo aparece em negrito e centralizado.

	As tags <tr> e <td> possuem os seguintes atributos:
		* colspan --> quantidade de celulas ocupadas
		* rowspan --> quantidade de celulas ocupadas

- FORMULÁRIOS

	Os formulários são definidos pela tag <form>...</form>

	Atributos importantes da tag <form>:
		* action="URI" --> dita para onde enviar dados do form
		* enctype --> define formato de codificaçao dos dados
		* method=get|post --> define método HTTP de envio dos dados

- inserção de texto com formulários

	O usuário pode enviar texto por meio das tags:
		* <input> --> envia 1 linha
		* <textarea> --> envia texto com mais de 1 linha

	Exemplo com o tag <input>:
	
	<input type="text" name="nome">

	o atributo type="text" informa que texto será inserido. Já o atributo
name="nome" é para nomear o input, então ser referenciado pelo nome.

	Exemplo de texto oculto no formulário, usa-se type="password":

	<input type="password" name="senha"/>

	Exemplo de texto longo inserido pelo usuário:

	<textarea naome="nome" rows="10" cols="40">Digite aqui</textarea>

- tag <label> para criar rótulos

	Os rótulos melhoram a usabilidade, pois ao clicar no rótulo, o browser
colocar o curso na caixa de controle

	Exemplo de utilização do label:

	<label for="senha"> Senha: </label>
	<input type="password" name="senha"/> 

- botões

	Existem 3 tipos de botões:
		* submit --> envia formulário
		* reset --> reseta todos os campos para valores iniciais
		* push --> associa comportamento com scripts

	3 exemplos de botões:
	
	<input type="submit" value="enviar"/>

	<input type="reset" value="Limpar"/>
	
	<button type="submit"> Enviar imagem <img src="img.jpg"></button>

- MENUS

	Menus fornecem um coonjunto de opções ao usuário. As tags <select>,
<optgroup> e <option> são usadas para definir menus


- FRAMES

	Os frames dividem a página para dispor o conteudo de varias documentos.
A tag <frameset> </frameset> deve ser colocada no lugar da tag <body>. NÃO HÁ
COMO a tag <frameset> e tag <body> coexistirem em um mesmo documento.

	No início do documento deve ser inserida a DTD para o frameset funcionar


