- PROPRIEDADE BACKGROUND

	Propriedade para definir as características do plano de fundo

- background-color

	Define cor de plano de fundo. O valor pode ser:
		* hexadecimal --> #FFFFFF
		* RGB --> rbg(255,235,0)
		* nome da cor --> red, cian, green...
		* transparente --> transparent

- background-image

	define imagem para plano de fundo. O valor é uma URL

- background-repeat

	Define a maneira como a imagem de fundo é posicionada. Os valores podem:
		* no-repeat
		* repeat
		* repeat-y
		* repeat-x

- background-position

	Define como e onde a imagem de fundo é posicionada. Pode ter valores:
		* x-pos y-pos
		* x-% y-%
		* top left
		* top center
		* entre outros

- background

	Maneira abreviada de todas as propriedades. Pode assumir os valores
possíveis de todos as outras propriedades acima


- PROPRIEDADE FONTE

	Define as características das letras do texto

- color

	Define a cor da fonte. Possíveis valores:
		* hexadecimal
		* rgb
		* nome da cor

- font-family

	Define o tipo de fonte. Possíveis valores:
		* family-name --> arial, verdana, helvetica...
		* generic-family --> serif, cursive, fantasy...
		* inherit

- font-size

	Define o tamanho da fonte. Possíveis valores:
		* xx-small
		* x-small
		* small
		* medium
		* large
		* x-large
		* xx-large
		* smaller
		* larger
		* lenth(em,px)
		* %
		* inherit

- font-style

	Define o estilo da fonte. Possíveis valores:
		* normal
		* italic
		* oblique
		* inherit

- font-variant

	Define fontes maiúsculas de menor altura. Possíveis valores:
		* normal
		* small-caps
		* inherit

- font-weight

	Define a intesidade do negrito da fonte. Possíveis valores:
		* normal
		* bold
		* bolder
		* lighter
		* 100 a 900
		* inherit

- font

	Maneira abreviada de todas as propriedades font

- o valor inherit

	Valor utilizado para herdar o valor de um elemento pai

- PROPRIEDADE LINKS

	As propriedads para links possibilitam efeitos para link visitado, não
visitado, ativo ou no estado hover.

	Os linnks possuem 4 seletores através de pseudoclasses. Uma pseudoclasse
é usada para adicionar efeitos diferentes ao mesmo elemento.

	No caso da tag <a>, existem 4 pseudoclasses:
		* a:link --> define o estilo do link no estado inicial
		* a:visited --> estilo do link visitado
		* a:hover --> estilo do link quando mouse está sobre ele
		* a:active --> estilo do link que já foi clicado (ativo)

- sintaxe para seletor com pseudoclasse

	seletor:pseudo-classe {propriedade: valor}

			ou

	seletor.classe:pseudo-classe {propriedade: valor}

	Como exemplo podemos ter:

	a.classe1:link , a.classe1:visited {text-decoration: udnerline}

	a.classe1: hove {
	  text-decoration: underline;
	  color: #FF0000;
	}

- efeito cascata no link

	É necessário ficar atento para o efeito cascata. Sempre a regra mais
próxima prevalece sobre a mais distante

	A ordem de declaração das pseudoclasses deve ser:
		* a:link
		* a:visited
		* a:hover
		* a:active

- PROPRIEDADE LISTAS

	As propriedades que estilizam listas permite escolher:
		* marcador de lista ordenada e não ordenada
		* imagem como marcador
		* definir posição do marcador

- list-style

	Define todas as propriedades. Deve-se seguir uma ordem:
		* list-style-image
		* list-style-position
		* list-style-type

- list-style-image

	Define imagem como marcador. Valores:
		* URL
		* none

- list-style-position

	Define se marcador deve aparecer indentado:
		* inside --> indentado com texto a direita
		* outside --> indentado com texto acima

- list-style-type

	Define o tipo de marcador

	Marcadores para listas não ordenadas:
		* none --> sem marcador
		* disc --> circulo pintado
		* circle --> circulo vazio
		* square --> quadrado

	Marcadores para listas ordenadas:
		* decimal (1,2,3...)
		* decimal-leading-zero (01,02,03...)
		* armenian georgian (an, ban, gan,...)
		* entre outros


- CORES

	As cores são definidas por duas propriedades:
		* color
		* background-color

- abreviação de código hexadecimal

	Um código hexadecimal pode ser abreviado quando há repetição de digitos.
Exemplo:

	h1 {color: #00FFCC;}

		ou

	h1 {color: #0FC;}

- cor RGB definida com porcentagem

	Uma cor definida por RGB pode ser feita com valores em porcentagem:
		
		h1 {color: rgb(0,255,195);}

		h1 {color: rgb(0%, 100%, 78%);}

	Não é permitido misturar valor percentual com normal

- esquema de cores

	Tambem chamado de círculo de cores, é um diagrama circular que 
exibe diferentes cores e mostra a relação entre elas. O esquema permite 
escolher cores que conmbinam entre si

	Website utilizado para realizar definição de palete de cores:

	http://paletton.com/

	http://www.colorhunter.com/

- ESTILIZAR TABELAS

	Alguns elementos podem ser utilizados para estilizar tabelas

- border

	Especifica a largura, o estilo e a cor da borda externa da tabela

	Valores da propriedade:
		* border-width
		* border-style
		* border-color

- border-collapse

	determina se as bordas são ou não duplas. Valores possíveis:
		* none
		* collapse

- border-radius

	Determina o nível da borda. Valores permitidos:
		* cm
		* px
		* %
- width

	Define a largura de cada celula ou tabela. Valores permitidos:
		* cm
		* px
		* %  (valor de 100% = tabela renderiza na largura da janela)

- height

	Define a altura de cada célula ou tabela. Valores permitidos:
		* cm
		* px
		* %

- text-align

	Determina o alinhamento horizontal do texto. Valores possíveis:
		* center
		* right
		* left

- vertical-align

	Determina a poisção vertical do texto. Valores usuais:
		* bottom
		* top
		* middle

- box-shadow

	Define a sombra ao redor da borda. Valores dessa propriedade:
		* px, cm ou %
		* cor (hexadecimal, rgb ou nome da cor)


- MODELOS DE CAIXAS

	Termo caixa é utilizado no contexto de design e layout. Caixas são
retângulos a serem exibidos na tela ou impressos. As caixas consistem de margens
, bordas, espaçamentos (padding) e conteúdo.

	Permite colocar bordas nos elementos e espaça-los de maneira uniforme.
Cria layout geral para documento

	Elementos de uma caixa:
		* margin --> area ao redor da borda ( distancia entre caixas)
		* border --> linha decorativa ao redor do elemento
		* padding --> distancia entre borda e conteudo
		* content --> conteudo da caixa


- border

	Especifica 3 propriedades para bordas:
		* border-width
		* border-style
		* border-color

- border-bottom

	Especifica propriedades para a borda inferior:
		* border-bottom-width
		* border-bottom-style
		* Border-bottom-color

- border-left

	Especifica as propriedades para a borda esquerda:
		* border-left-width
		* border-left-style
		* border-left-color

- border-right

	Especifica as propriedads para a borda direita:
		* border-right-width
		* border-right-style
		* border-right-color

- border-style

	Especifica o estilo das 4 bordas:
		* none
		* hidden
		* dotted
		* dashed
		* solid
		* double
		* groove
		* ridge
		* inset
		* outset

	Essa propriedade pode ser especificada em termos de até 4 valores.
Exemplos:

	1 valor = todas as bordas assumem esse valor

	p {border-style: dotted;}

	2 valores = bordas de cima / baixo e bordas esquerda/direita

	p {border-style: dotted solid;}

	4 valores = bordas de cima, direita, baixo e esquerda

	p {border-style: dotted solid double dashed;}

- border-top

	Especifica as propriedades para a borda superior:
		* border-top-width
		* border-top-style
		* border-top-color

- border-width

	Especifica a espessura das 4 bordas:
		* thin
		* medium
		* thick
		* tamanho

- margin

	especifica as propriedads de margem, na ordem:
		* superior
		* direita
		* inferior
		* esquerda

	Quando varias caixas são definidas, as margens são sobrepostas. Resulta
em distância igual à maior das margens

- padding (espaçamento)

	Determina a distancia entre a borda e conteudo. Assume o plano de fundo
definido para o elemento

	Os valores definidos são, na ordem:
		* superior
		* direita
		* baixo
		* esquerda


- dimensões dos elementos

	É possível determinar as dimensões de todos os elementos.
As propriedades das dimensões são:
	* height --> altura (auto, length, %)
	* max-height --> altura maxima (none, length, %)
	* max-width --> largura maxima (none, length, %)
	* min-heigth --> altura minima (length, %)
	* min-width --> largura minima (length, %)
	* width --> largura (auto, length, %)

	Cuidado ao utilizar essas propriedades, pois espaçamentos devem caber
dentro das dimensões definidas. Uma solução é usar o valor "auto", que indica
ao elemento que deve preencher o espaço que falta

- posicionamento

	A posição dos elementos pode ser determinada com as propriedades:
		* bottom --> posição vertical inferior (auto, length, %)
		* clip --> tamanho de elemento posicionado com metodo absolute
		* cursor --> determina tipo de cursor ao passar por elemento
		* left --> posição horizontal esquerda (auto, length, %)
		* overflow --> determina ação com elemento maior que a caixa
		* position --> determina método de posicionamento
		* right --> posição horizontal direita (auto, length, %)
		* top --> posição vertical superior (auto, length, %)
		* z-index --> dita se elemento sobrepõe ou é sobreposto 

	Os possíveis métodos de posicionamento são:
		* static --> elemento nao deve ser afetado por posicionamento
		* fixed --> fixa elemento visível mesmo ao rolar pagina
		* relative --> elemento é posicionado em relação ao fluxo
		* absolute --> elemento posicionado em relação ao elemento pai

- z-index

	Propriedade z-index especifica se elemento deve ser colocado na frente
ou por trás de outros, quando elementos usam método de posicionamento que 
permite a sobreposição.

	Essa propriedade assume valores inteiros. O elemento como o maior valor
é o que estará acima. Caso o elemento não tenha a propriedade z-index, então
o elemento escrito por último no html será posto acima dos demais.

- propriedade display

	os elementos do html são de 2 tipos:
		* block --> largura definida / finalizado com quebra de linh
		* inline --> não força quebra de linha

	A propriedade display pode modificar o tipo dos elementos, ao definir
valores como:
	* inline --> define elemento nao terá quebra de linha
	* block --> define que elemento terá quebra de linha
	* none --> elemento nao será mostrado

	Valor inline é muito utilizado para por elementos lado a lado

- propriedade float

	Essa propriedade permite que elementos sejam empurrados para direita
ou esquerda, e demais elementos fiquem ao seu redor. Muito utilizada para
posicionar imagens

	O elemento com a propriedade float é posicionado à direita ou à esquerda
e o seguinte a ele é colocado ao lado. Elementos antes do float nao afetam-se

	é possível posicionar figura ao lado da outra e criar uma galeria de 
imagens ao usar a propriedade float. Facilita eliminando necessidade de 
posicionar cada figura individualmente.

	Valores de float:
		* left
		* rigth
		* none
		* inherit

	Para interagir com um elemento float, usa-se a propriedade clear. Essa
especifica o lado de um elemento para impedir um elemento float. Os valores:
		* left
		* right
		* both
		* none
		* inherit


